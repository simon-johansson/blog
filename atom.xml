<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://simon-johansson.github.com/blog/atom.xml" rel="self"/>
  <link href="http://simon-johansson.github.com/blog/"/>
  <updated>2013-01-25T18:12:01+01:00</updated>
  <id>http://simon-johansson.github.com/blog/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NAME OF BLOG ARTICLE]]></title>
    <link href="http://simon-johansson.github.com/blog/blog/2013/01/24/name-of-blog-article/"/>
    <updated>2013-01-24T01:55:00+01:00</updated>
    <id>http://simon-johansson.github.com/blog/blog/2013/01/24/name-of-blog-article</id>
    <content type="html"><![CDATA[<h1>Sample Markdown Cheat Sheet</h1>

<p>This is a sample markdown file to help you write Markdown quickly :)</p>

<p>If you use the fabulous <a href="http://sublimetext.com">Sublime Text 2 editor</a> along with the <a href="https://github.com/revolunet/sublimetext-markdown-preview">Markdown Preview plugin</a>, open your ST2 Palette with <code>CMD+P</code> then choose <code>Markdown Preview in browser</code> to see the result in your browser.</p>

<h2>Text basics</h2>

<p>this is <em>italic</em> and this is <strong>bold</strong> .  another <em>italic</em> and another <strong>bold</strong></p>

<p>this is <code>important</code> text. and percentage signs : % and <code>%</code></p>

<p>This is a paragraph with a footnote (builtin parser only). <a href="This">^note-id</a></p>

<p>Insert <code>[ toc ]</code> without spaces to generate a table of contents (builtin parser only).</p>

<h2>Indentation</h2>

<blockquote><p>Here is some indented text</p>

<blockquote><p>even more indented</p></blockquote></blockquote>

<h2>Titles</h2>

<h1>Big title (h1)</h1>

<h2>Middle title (h2)</h2>

<h3>Smaller title (h3)</h3>

<h4>and so on (hX)</h4>

<h5>and so on (hX)</h5>

<h6>and so on (hX)</h6>

<h2>Example lists (1)</h2>

<ul>
<li>bullets can be <code>-</code>, <code>+</code>, or <code>*</code></li>
<li>bullet list 1</li>
<li><p>bullet list 2</p>

<ul>
<li>sub item 1</li>
<li><p>sub item 2</p>

<p>  with indented text inside</p></li>
</ul>
</li>
<li><p>bullet list 3</p></li>
<li>bullet list 4</li>
<li>bullet list 5</li>
</ul>


<h2>Links</h2>

<p>This is an <a href="http://lmgtfy.com/">example inline link</a> and <a href="http://lmgtfy.com/" title="Hello, world">another one with a title</a>.</p>

<p>Links can also be reference based : <a href="http://revolunet.com">reference 1</a> or <a href="http://revolunet.com" title="rich web apps">reference 2 with title</a>.</p>

<p>References are usually placed at the bottom of the document</p>

<h2>Images</h2>

<p>A sample image :</p>

<p><img src="http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg" title="revolunet logo" alt="revolunet logo" /></p>

<p>As links, images can also use references instead of inline links :</p>

<p><img src="http://www.revolunet.com/static/parisjs8/img/logo-revolunet-carre.jpg" title="revolunet logo" alt="revolunet logo" /></p>

<h2>Code</h2>

<p>It&#8217;s quite easy to show code in markdown files.</p>

<p>Backticks can be used to <code>highlight</code> some words.</p>

<p>Also, any indented block is considered a code block.</p>

<pre><code>&lt;script&gt;
    document.location = 'http://lmgtfy.com/?q=markdown+cheat+sheet';
&lt;/script&gt;
</code></pre>

<h2>GitHub Flavored Markdown</h2>

<p>If you use the Github parser, you can use some of <a href="http://github.github.com/github-flavored-markdown/">Github Flavored Markdown</a> syntax :</p>

<ul>
<li>User/Project@SHA: revolunet/sublimetext-markdown-preview@7da61badeda468b5019869d11000307e07e07401</li>
<li>User/Project#Issue: revolunet/sublimetext-markdown-preview#1</li>
<li>User : @revolunet</li>
</ul>


<p>Some Python code :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CardGame</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot; a sample python class &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">NB_CARDS</span> <span class="o">=</span> <span class="mi">32</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cards</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">cards</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">NB_CARDS</span><span class="p">),</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;ready to play&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Some Javascript code :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">duration</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">comment</span><span class="o">:</span> <span class="s1">&#39;WTF&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// callbacks beauty un action</span>
</span><span class='line'><span class="nx">async_call</span><span class="p">(</span><span class="s1">&#39;/path/to/api&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">json</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">another_call</span><span class="p">(</span><span class="nx">json</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">another_another_call</span><span class="p">(</span><span class="nx">result2</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">another_another_another_call</span><span class="p">(</span><span class="nx">result3</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result4</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;And if all went well, i got my result :)&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h2>About</h2>

<p>This plugin and this sample file is proudly brought to you by the <a href="http://revolunet.com">revolunet team</a></p>
]]></content>
  </entry>
  
</feed>
